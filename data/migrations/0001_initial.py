# Generated by Django 4.2.16 on 2025-01-03 19:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisArticle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('pdf', models.CharField(max_length=100)),
                ('picture', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'analysis_article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisProfile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.CharField(max_length=100)),
                ('summary', models.TextField()),
                ('resume', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'analysis_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='C2022A',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unitid', models.IntegerField(blank=True, db_column='UNITID', null=True)),
                ('cipcode', models.IntegerField(blank=True, db_column='CIPCODE', null=True)),
                ('majornum', models.IntegerField(blank=True, db_column='MAJORNUM', null=True)),
                ('awlevel', models.IntegerField(blank=True, db_column='AWLEVEL', null=True)),
                ('ctotalt', models.IntegerField(blank=True, db_column='CTOTALT', null=True)),
                ('ctotalm', models.IntegerField(blank=True, db_column='CTOTALM', null=True)),
                ('ctotalw', models.IntegerField(blank=True, db_column='CTOTALW', null=True)),
                ('caiant', models.IntegerField(blank=True, db_column='CAIANT', null=True)),
                ('caianm', models.IntegerField(blank=True, db_column='CAIANM', null=True)),
                ('caianw', models.IntegerField(blank=True, db_column='CAIANW', null=True)),
                ('casiat', models.IntegerField(blank=True, db_column='CASIAT', null=True)),
                ('casiam', models.IntegerField(blank=True, db_column='CASIAM', null=True)),
                ('casiaw', models.IntegerField(blank=True, db_column='CASIAW', null=True)),
                ('cbkaat', models.IntegerField(blank=True, db_column='CBKAAT', null=True)),
                ('cbkaam', models.IntegerField(blank=True, db_column='CBKAAM', null=True)),
                ('cbkaaw', models.IntegerField(blank=True, db_column='CBKAAW', null=True)),
                ('chispt', models.IntegerField(blank=True, db_column='CHISPT', null=True)),
                ('chispm', models.IntegerField(blank=True, db_column='CHISPM', null=True)),
                ('chispw', models.IntegerField(blank=True, db_column='CHISPW', null=True)),
                ('cnhpit', models.IntegerField(blank=True, db_column='CNHPIT', null=True)),
                ('cnhpim', models.IntegerField(blank=True, db_column='CNHPIM', null=True)),
                ('cnhpiw', models.IntegerField(blank=True, db_column='CNHPIW', null=True)),
                ('cwhitt', models.IntegerField(blank=True, db_column='CWHITT', null=True)),
                ('cwhitm', models.IntegerField(blank=True, db_column='CWHITM', null=True)),
                ('cwhitw', models.IntegerField(blank=True, db_column='CWHITW', null=True)),
                ('c2mort', models.IntegerField(blank=True, db_column='C2MORT', null=True)),
                ('c2morm', models.IntegerField(blank=True, db_column='C2MORM', null=True)),
                ('c2morw', models.IntegerField(blank=True, db_column='C2MORW', null=True)),
                ('cunknt', models.IntegerField(blank=True, db_column='CUNKNT', null=True)),
                ('cunknm', models.IntegerField(blank=True, db_column='CUNKNM', null=True)),
                ('cunknw', models.IntegerField(blank=True, db_column='CUNKNW', null=True)),
                ('cnralt', models.IntegerField(blank=True, db_column='CNRALT', null=True)),
                ('cnralm', models.IntegerField(blank=True, db_column='CNRALM', null=True)),
                ('cnralw', models.IntegerField(blank=True, db_column='CNRALW', null=True)),
            ],
            options={
                'db_table': 'c2022_a',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardRankingdata',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('indicator', models.CharField(db_column='Indicator', max_length=255)),
                ('rank_2010', models.IntegerField(db_column='Rank_2010')),
                ('rank_growth_2010_2019', models.IntegerField(db_column='Rank_Growth_2010_2019')),
                ('rank_2019', models.IntegerField(db_column='Rank_2019')),
                ('rank_growth_2019_2023', models.IntegerField(db_column='Rank_Growth_2019_2023')),
                ('rank_2023', models.IntegerField(db_column='Rank_2023')),
                ('state', models.CharField(blank=True, db_column='State', max_length=255, null=True)),
            ],
            options={
                'db_table': 'dashboard_rankingdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FrameworkFramework',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('pub_date', models.DateTimeField()),
                ('body', models.TextField()),
                ('image', models.CharField(max_length=100)),
                ('index', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'framework_framework',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FrameworkImage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'framework_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hd2022',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instnm', models.TextField(blank=True, null=True)),
                ('addr', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('stabbr', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('obereg', models.IntegerField(blank=True, null=True)),
                ('chfnm', models.TextField(blank=True, null=True)),
                ('chftitle', models.TextField(blank=True, null=True)),
                ('gentele', models.TextField(blank=True, null=True)),
                ('faidurl', models.TextField(blank=True, null=True)),
                ('adminurl', models.TextField(blank=True, null=True)),
                ('applurl', models.TextField(blank=True, null=True)),
                ('disaurl', models.TextField(blank=True, null=True)),
                ('ein', models.TextField(blank=True, null=True)),
                ('ueis', models.TextField(blank=True, null=True)),
                ('opeid', models.TextField(blank=True, null=True)),
                ('opeflag', models.IntegerField(blank=True, null=True)),
                ('webaddr', models.TextField(blank=True, null=True)),
                ('npricurl', models.TextField(blank=True, null=True)),
                ('sector', models.IntegerField(blank=True, null=True)),
                ('iclevel', models.IntegerField(blank=True, null=True)),
                ('control', models.IntegerField(blank=True, null=True)),
                ('hloffer', models.IntegerField(blank=True, null=True)),
                ('ugoffer', models.IntegerField(blank=True, null=True)),
                ('groffer', models.IntegerField(blank=True, null=True)),
                ('hdegofr1', models.IntegerField(blank=True, null=True)),
                ('deggrant', models.IntegerField(blank=True, null=True)),
                ('hbcu', models.IntegerField(blank=True, null=True)),
                ('hospital', models.IntegerField(blank=True, null=True)),
                ('medical', models.IntegerField(blank=True, null=True)),
                ('tribal', models.IntegerField(blank=True, null=True)),
                ('carnegie', models.IntegerField(blank=True, null=True)),
                ('locale', models.IntegerField(blank=True, null=True)),
                ('openpubl', models.IntegerField(blank=True, null=True)),
                ('act', models.TextField(blank=True, null=True)),
                ('newid', models.IntegerField(blank=True, null=True)),
                ('deathyr', models.IntegerField(blank=True, null=True)),
                ('closedat', models.TextField(blank=True, null=True)),
                ('cyactive', models.IntegerField(blank=True, null=True)),
                ('postsec', models.IntegerField(blank=True, null=True)),
                ('pseflag', models.IntegerField(blank=True, null=True)),
                ('pset4flg', models.IntegerField(blank=True, null=True)),
                ('rptmth', models.IntegerField(blank=True, null=True)),
                ('instcat', models.IntegerField(blank=True, null=True)),
                ('ccbasic', models.IntegerField(blank=True, null=True)),
                ('landgrnt', models.IntegerField(blank=True, null=True)),
                ('dfrcgid', models.IntegerField(blank=True, null=True)),
                ('c15basic', models.IntegerField(blank=True, null=True)),
                ('c21ipug', models.IntegerField(blank=True, null=True)),
                ('c21ipgrd', models.IntegerField(blank=True, null=True)),
                ('c21ugprf', models.IntegerField(blank=True, null=True)),
                ('c21enprf', models.IntegerField(blank=True, null=True)),
                ('c21szset', models.IntegerField(blank=True, null=True)),
                ('c18basic', models.IntegerField(blank=True, null=True)),
                ('c21basic', models.IntegerField(blank=True, null=True)),
                ('dfrcuscg', models.IntegerField(blank=True, null=True)),
                ('f1systyp', models.IntegerField(blank=True, null=True)),
                ('f1syscod', models.TextField(blank=True, null=True)),
                ('f1sysnam', models.TextField(blank=True, null=True)),
                ('ialias', models.TextField(blank=True, null=True)),
                ('cbsa', models.IntegerField(blank=True, null=True)),
                ('cbsatype', models.IntegerField(blank=True, null=True)),
                ('csa', models.IntegerField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('countycd', models.IntegerField(blank=True, null=True)),
                ('countynm', models.TextField(blank=True, null=True)),
                ('cngdstcd', models.IntegerField(blank=True, null=True)),
                ('veturl', models.TextField(blank=True, null=True)),
                ('instsize', models.IntegerField(blank=True, null=True)),
                ('athurl', models.TextField(blank=True, null=True)),
                ('unitid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hd2022',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hd2023',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unitid', models.IntegerField(blank=True, db_column='UNITID', null=True)),
                ('instnm', models.CharField(blank=True, db_column='INSTNM', max_length=128, null=True)),
                ('ialias', models.CharField(blank=True, db_column='IALIAS', max_length=256, null=True)),
                ('addr', models.CharField(blank=True, db_column='ADDR', max_length=64, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=50, null=True)),
                ('stabbr', models.CharField(blank=True, db_column='STABBR', max_length=50, null=True)),
                ('zip', models.CharField(blank=True, db_column='ZIP', max_length=50, null=True)),
                ('fips', models.CharField(blank=True, db_column='FIPS', max_length=50, null=True)),
                ('obereg', models.CharField(blank=True, db_column='OBEREG', max_length=50, null=True)),
                ('chfnm', models.CharField(blank=True, db_column='CHFNM', max_length=50, null=True)),
                ('chftitle', models.CharField(blank=True, db_column='CHFTITLE', max_length=50, null=True)),
                ('gentele', models.IntegerField(blank=True, db_column='GENTELE', null=True)),
                ('ein', models.IntegerField(blank=True, db_column='EIN', null=True)),
                ('ueis', models.CharField(blank=True, db_column='UEIS', max_length=256, null=True)),
                ('opeid', models.IntegerField(blank=True, db_column='OPEID', null=True)),
                ('opeflag', models.IntegerField(blank=True, db_column='OPEFLAG', null=True)),
                ('webaddr', models.CharField(blank=True, db_column='WEBADDR', max_length=50, null=True)),
                ('adminurl', models.CharField(blank=True, db_column='ADMINURL', max_length=128, null=True)),
                ('faidurl', models.CharField(blank=True, db_column='FAIDURL', max_length=128, null=True)),
                ('applurl', models.CharField(blank=True, db_column='APPLURL', max_length=128, null=True)),
                ('npricurl', models.CharField(blank=True, db_column='NPRICURL', max_length=128, null=True)),
                ('veturl', models.CharField(blank=True, db_column='VETURL', max_length=128, null=True)),
                ('athurl', models.CharField(blank=True, db_column='ATHURL', max_length=128, null=True)),
                ('disaurl', models.CharField(blank=True, db_column='DISAURL', max_length=128, null=True)),
                ('sector', models.IntegerField(blank=True, db_column='SECTOR', null=True)),
                ('iclevel', models.IntegerField(blank=True, db_column='ICLEVEL', null=True)),
                ('control', models.IntegerField(blank=True, db_column='CONTROL', null=True)),
                ('hloffer', models.IntegerField(blank=True, db_column='HLOFFER', null=True)),
                ('ugoffer', models.IntegerField(blank=True, db_column='UGOFFER', null=True)),
                ('groffer', models.IntegerField(blank=True, db_column='GROFFER', null=True)),
                ('hdegofr1', models.IntegerField(blank=True, db_column='HDEGOFR1', null=True)),
                ('deggrant', models.IntegerField(blank=True, db_column='DEGGRANT', null=True)),
                ('hbcu', models.IntegerField(blank=True, db_column='HBCU', null=True)),
                ('hospital', models.IntegerField(blank=True, db_column='HOSPITAL', null=True)),
                ('medical', models.IntegerField(blank=True, db_column='MEDICAL', null=True)),
                ('tribal', models.IntegerField(blank=True, db_column='TRIBAL', null=True)),
                ('locale', models.IntegerField(blank=True, db_column='LOCALE', null=True)),
                ('openpubl', models.IntegerField(blank=True, db_column='OPENPUBL', null=True)),
                ('act', models.CharField(blank=True, db_column='ACT', max_length=50, null=True)),
                ('newid', models.IntegerField(blank=True, db_column='NEWID', null=True)),
                ('deathyr', models.IntegerField(blank=True, db_column='DEATHYR', null=True)),
                ('closedat', models.IntegerField(blank=True, db_column='CLOSEDAT', null=True)),
                ('cyactive', models.IntegerField(blank=True, db_column='CYACTIVE', null=True)),
                ('postsec', models.IntegerField(blank=True, db_column='POSTSEC', null=True)),
                ('pseflag', models.IntegerField(blank=True, db_column='PSEFLAG', null=True)),
                ('pset4flg', models.IntegerField(blank=True, db_column='PSET4FLG', null=True)),
                ('rptmth', models.IntegerField(blank=True, db_column='RPTMTH', null=True)),
                ('instcat', models.IntegerField(blank=True, db_column='INSTCAT', null=True)),
                ('c21basic', models.IntegerField(blank=True, db_column='C21BASIC', null=True)),
                ('c21ipug', models.IntegerField(blank=True, db_column='C21IPUG', null=True)),
                ('c21ipgrd', models.IntegerField(blank=True, db_column='C21IPGRD', null=True)),
                ('c21ugprf', models.IntegerField(blank=True, db_column='C21UGPRF', null=True)),
                ('c21enprf', models.IntegerField(blank=True, db_column='C21ENPRF', null=True)),
                ('c21szset', models.IntegerField(blank=True, db_column='C21SZSET', null=True)),
                ('c18basic', models.IntegerField(blank=True, db_column='C18BASIC', null=True)),
                ('c15basic', models.IntegerField(blank=True, db_column='C15BASIC', null=True)),
                ('ccbasic', models.IntegerField(blank=True, db_column='CCBASIC', null=True)),
                ('carnegie', models.IntegerField(blank=True, db_column='CARNEGIE', null=True)),
                ('landgrnt', models.IntegerField(blank=True, db_column='LANDGRNT', null=True)),
                ('instsize', models.IntegerField(blank=True, db_column='INSTSIZE', null=True)),
                ('f1systyp', models.IntegerField(blank=True, db_column='F1SYSTYP', null=True)),
                ('f1sysnam', models.CharField(blank=True, db_column='F1SYSNAM', max_length=50, null=True)),
                ('f1syscod', models.IntegerField(blank=True, db_column='F1SYSCOD', null=True)),
                ('cbsa', models.IntegerField(blank=True, db_column='CBSA', null=True)),
                ('cbsatype', models.IntegerField(blank=True, db_column='CBSATYPE', null=True)),
                ('csa', models.IntegerField(blank=True, db_column='CSA', null=True)),
                ('countycd', models.IntegerField(blank=True, db_column='COUNTYCD', null=True)),
                ('countynm', models.CharField(blank=True, db_column='COUNTYNM', max_length=50, null=True)),
                ('cngdstcd', models.IntegerField(blank=True, db_column='CNGDSTCD', null=True)),
                ('longitud', models.FloatField(blank=True, db_column='LONGITUD', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='LATITUDE', null=True)),
                ('dfrcgid', models.IntegerField(blank=True, db_column='DFRCGID', null=True)),
                ('dfrcuscg', models.IntegerField(blank=True, db_column='DFRCUSCG', null=True)),
            ],
            options={
                'db_table': 'hd2023',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, null=True)),
                ('group', models.CharField(blank=True, null=True)),
                ('indicator', models.CharField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, null=True)),
                ('source', models.CharField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indicator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankingsEconomicdata',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=100)),
                ('indicator', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'rankings_economicdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankingsGroupname',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('index', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('weight', models.FloatField()),
            ],
            options={
                'db_table': 'rankings_groupname',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankingsIndicator',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=100)),
                ('indicator', models.CharField(max_length=200)),
                ('unit', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': 'rankings_indicator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankingsIndicatorindex',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(max_length=20)),
                ('indicator', models.CharField(max_length=200)),
                ('weight', models.FloatField()),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('key', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rankings_indicatorindex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankingsState',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('r_id', models.CharField(max_length=10)),
                ('s_id', models.CharField(max_length=10)),
                ('region', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'rankings_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyBusiness',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'survey_business',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyBusinessfield',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('field', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'survey_businessfield',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyBusinesssize',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('size', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'survey_businesssize',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyBusinesstype',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'survey_businesstype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyGeneralfeedback',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
            ],
            options={
                'db_table': 'survey_generalfeedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyGeneralinformation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=255)),
                ('year_established', models.IntegerField()),
                ('business_address', models.CharField(max_length=255)),
                ('respondent_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'survey_generalinformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyStrategyoperation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('vision', models.CharField(max_length=1)),
                ('mission', models.CharField(max_length=1)),
                ('strategic_goals', models.CharField(max_length=1)),
                ('submitted_at', models.DateTimeField()),
                ('competitive_advantage', models.CharField(max_length=1)),
                ('core_values', models.CharField(max_length=1)),
                ('core_values_building', models.CharField(max_length=1)),
                ('customer_service', models.CharField(max_length=1)),
                ('innovation_capacity', models.CharField(max_length=1)),
                ('job_description', models.CharField(max_length=1)),
                ('marketing_level', models.CharField(max_length=1)),
                ('operational_process', models.CharField(max_length=1)),
                ('organizational_chart', models.CharField(max_length=1)),
                ('performance_measurement', models.CharField(max_length=1)),
                ('r_and_d_spending', models.CharField(max_length=1)),
                ('technology_absorption', models.CharField(max_length=1)),
                ('technology_use', models.CharField(max_length=1)),
                ('value_chain', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'survey_strategyoperation',
                'managed': False,
            },
        ),
    ]
